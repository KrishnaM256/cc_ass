FILE 1: expr.l

%{
#include "y.tab.h"
#include <stdlib.h>
%}

%%

[0-9]+\.[0-9]+         { yylval.fval = atof(yytext); return FLOAT; }
[0-9]+                 { yylval.fval = atof(yytext); return FLOAT; }
[\t\n ]+               ; // Ignore whitespace
"*"                    { return '*'; }
"/"                    { return '/'; }
"+"                    { return '+'; }
"-"                    { return '-'; }
"("                    { return '('; }
")"                    { return ')'; }

.                      { printf("Invalid character: %s\n", yytext); }

%%
int yywrap() { return 1; }





FILE 2: expr.y

%{
#include <stdio.h>
#include <stdlib.h>
%}

%union {
    float fval;
}

%token <fval> FLOAT

%left '+' '-'
%left '*' '/'
%start input

%%

input:
    expr { printf("Result = %.2f\n", $1); }
    ;

expr:
    expr '+' expr   { $$ = $1 + $3; }
    | expr '-' expr { $$ = $1 - $3; }
    | expr '*' expr { $$ = $1 * $3; }
    | expr '/' expr { $$ = $1 / $3; }
    | '(' expr ')'  { $$ = $2; }
    | FLOAT         { $$ = $1; }
    ;

%%

int main() {
    printf("Enter expression:\n");
    return yyparse();
}

int yyerror(char *s) {
    fprintf(stderr, "Error: %s\n", s);
    return 0;
}

Save the files as expr.l and expr.y.

Open terminal and run:

bash
Copy
Edit
yacc -d expr.y
lex expr.l
gcc y.tab.c lex.yy.c -o expr_calc -lm
./expr_calc