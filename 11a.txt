Step 1: varname.l 


%{
#include "y.tab.h"
%}

%%

[a-zA-Z_][a-zA-Z0-9_]*    { yylval.str = strdup(yytext); return IDENTIFIER; }
.|\n                      { return INVALID; }

%%
int yywrap() { return 1; }



Step 2: varname.y 

%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int yyerror(const char *s);
int yylex(void);
%}

%union {
    char *str;
}

%token <str> IDENTIFIER
%token INVALID
%start input

%%

input:
    IDENTIFIER {
        printf("'%s' is a valid variable name.\n", $1);
    }
    | INVALID {
        printf("Invalid variable name.\n");
    }
    ;

%%

int yyerror(const char *s) {
    fprintf(stderr, "Parse Error: %s\n", s);
    return 0;
}

int main() {
    printf("Enter a variable name:\n");
    return yyparse();
}





yacc -d varname.y
lex varname.l
gcc y.tab.c lex.yy.c -o varcheck
./varcheck
